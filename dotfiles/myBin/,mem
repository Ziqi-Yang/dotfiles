#!/bin/bash

# Check if a process name has been provided
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <process_name>"
    exit 1
fi

process_name="$1"

# Get the total physical memory of the system
total_mem_kib=$(grep MemTotal /proc/meminfo | awk '{print $2}')
total_mem_mib=$(echo "scale=2; $total_mem_kib / 1024" | bc)

# Get the PIDs of the given process name
pids=$(pgrep -d, -x "$process_name")

# Check if any PIDs were found
if [ -z "$pids" ]; then
    echo "No process found with the name $process_name"
    exit 1
fi

# Get the total memory used by the application in kilobytes
total_rss_kib=$(ps --no-headers -o rss $(echo "$pids" | xargs pstree -p | grep -o '([0-9]\+)' | tr -d '()') | awk '{ total += $1 } END { print total }')

# Convert kilobytes to megabytes for human readability
total_rss_mib=$(echo "scale=2; $total_rss_kib / 1024" | bc)

# Calculate the memory usage percentage
mem_percentage=$(echo "scale=4; ($total_rss_kib / $total_mem_kib) * 100" | bc)

# Print the results
echo "$process_name total memory usage: $total_rss_mib MB of $total_mem_mib MB total memory ($mem_percentage% used by $process_name)"
